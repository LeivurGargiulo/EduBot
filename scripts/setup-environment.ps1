# Discord Bot Environment Setup Script
# This script helps you set up your .env file with the required configuration

param(
    [switch]$Interactive = $true,
    [string]$EnvFile = ".env"
)

Write-Host "Discord Bot Environment Setup" -ForegroundColor Green
Write-Host "=============================" -ForegroundColor Green
Write-Host ""

# Check if .env file exists
if (Test-Path $EnvFile) {
    Write-Host "⚠️  .env file already exists. This script will overwrite it." -ForegroundColor Yellow
    $response = Read-Host "Do you want to continue? (y/N)"
    if ($response -ne "y" -and $response -ne "Y") {
        Write-Host "Setup cancelled." -ForegroundColor Red
        exit 0
    }
}

# Function to get user input with validation
function Get-UserInput {
    param(
        [string]$Prompt,
        [string]$Default = "",
        [string]$ValidationPattern = ".*"
    )
    
    do {
        if ($Default) {
            $input = Read-Host "$Prompt (default: $Default)"
            if ([string]::IsNullOrWhiteSpace($input)) {
                $input = $Default
            }
        } else {
            $input = Read-Host $Prompt
        }
        
        if ($input -match $ValidationPattern) {
            return $input
        } else {
            Write-Host "❌ Invalid input. Please try again." -ForegroundColor Red
        }
    } while ($true)
}

# Function to get Discord ID with validation
function Get-DiscordId {
    param([string]$Prompt)
    return Get-UserInput -Prompt $Prompt -ValidationPattern "^\d{17,19}$"
}

# Function to get URL with validation
function Get-URL {
    param([string]$Prompt, [string]$Default = "")
    return Get-UserInput -Prompt $Prompt -Default $Default -ValidationPattern "^(https?://.+|)$"
}

# Function to get boolean with validation
function Get-Boolean {
    param([string]$Prompt, [string]$Default = "true")
    do {
        $input = Read-Host "$Prompt (true/false, default: $Default)"
        if ([string]::IsNullOrWhiteSpace($input)) {
            $input = $Default
        }
        
        if ($input -eq "true" -or $input -eq "false") {
            return $input
        } else {
            Write-Host "❌ Please enter 'true' or 'false'." -ForegroundColor Red
        }
    } while ($true)
}

# Collect configuration
Write-Host "Required Configuration:" -ForegroundColor Cyan
Write-Host "======================" -ForegroundColor Cyan

$discordToken = Get-UserInput -Prompt "Discord Bot Token" -ValidationPattern "^[A-Za-z0-9_-]{23,28}\.[A-Za-z0-9_-]{6,7}\.[A-Za-z0-9_-]{27}$"
$clientId = Get-DiscordId -Prompt "Client ID"
$guildId = Get-DiscordId -Prompt "Guild ID"

Write-Host ""
Write-Host "Bot Channels Configuration:" -ForegroundColor Cyan
Write-Host "===========================" -ForegroundColor Cyan

$moderationChannelId = Get-DiscordId -Prompt "Moderation Channel ID (optional)"
$supportChannelId = Get-DiscordId -Prompt "Support Channel ID (optional)"

Write-Host ""
Write-Host "Staff Roles Configuration:" -ForegroundColor Cyan
Write-Host "=========================" -ForegroundColor Cyan

$staffRoleId = Get-DiscordId -Prompt "Staff Role ID (optional)"
$adminRoleId = Get-DiscordId -Prompt "Admin Role ID (optional)"
$moderatorRoleId = Get-DiscordId -Prompt "Moderator Role ID (optional)"

Write-Host ""
Write-Host "Verification System Configuration:" -ForegroundColor Cyan
Write-Host "===================================" -ForegroundColor Cyan

$verificationChannelId = Get-DiscordId -Prompt "Verification Channel ID (optional)"
$verifiedRoleId = Get-DiscordId -Prompt "Verified Role ID (optional)"
$verificationEnabled = Get-Boolean -Prompt "Enable Verification System" -Default "true"

Write-Host ""
Write-Host "Voice Configuration:" -ForegroundColor Cyan
Write-Host "====================" -ForegroundColor Cyan

$dynamicVoiceTriggerChannelId = Get-DiscordId -Prompt "Dynamic Voice Trigger Channel ID (optional)"
$dynamicVoiceNameTemplate = Get-UserInput -Prompt "Dynamic Voice Name Template" -Default "Canal de {usuario}"
$dynamicVoiceUserLimit = Get-UserInput -Prompt "Dynamic Voice User Limit (0 = no limit)" -Default "0" -ValidationPattern "^\d+$"

Write-Host ""
Write-Host "Optional Configuration:" -ForegroundColor Cyan
Write-Host "======================" -ForegroundColor Cyan

$feedbackFormUrl = Get-URL -Prompt "Feedback Form URL (optional)"
$guidelinesUrl = Get-URL -Prompt "Guidelines URL (optional)"
$doubtsChannelId = Get-DiscordId -Prompt "Doubts Channel ID (optional)"
$announcementsChannelId = Get-DiscordId -Prompt "Announcements Channel ID (optional)"

# Create .env content
$envContent = @"
# Discord Bot Configuration
# Generated by setup-environment.ps1

# Required Discord Bot Configuration
DISCORD_TOKEN=$discordToken
CLIENT_ID=$clientId
GUILD_ID=$guildId

# Bot Channels Configuration
MODERATION_CHANNEL_ID=$moderationChannelId
SUPPORT_CHANNEL_ID=$supportChannelId

# Staff Roles Configuration
STAFF_ROLE_ID=$staffRoleId
ADMIN_ROLE_ID=$adminRoleId
MODERATOR_ROLE_ID=$moderatorRoleId

# Verification System Configuration
VERIFICATION_CHANNEL_ID=$verificationChannelId
VERIFIED_ROLE_ID=$verifiedRoleId
VERIFICATION_ENABLED=$verificationEnabled

# Voice Configuration
DYNAMIC_VOICE_TRIGGER_CHANNEL_ID=$dynamicVoiceTriggerChannelId
DYNAMIC_VOICE_NAME_TEMPLATE=$dynamicVoiceNameTemplate
DYNAMIC_VOICE_USER_LIMIT=$dynamicVoiceUserLimit

# Optional Configuration
FEEDBACK_FORM_URL=$feedbackFormUrl
GUIDELINES_URL=$guidelinesUrl
DOUBTS_CHANNEL_ID=$doubtsChannelId
ANNOUNCEMENTS_CHANNEL_ID=$announcementsChannelId
"@

# Write to .env file
try {
    $envContent | Out-File -FilePath $EnvFile -Encoding UTF8
    Write-Host ""
    Write-Host "✅ Environment configuration saved to $EnvFile" -ForegroundColor Green
    Write-Host ""
    Write-Host "Next steps:" -ForegroundColor Yellow
    Write-Host "1. Review the generated .env file" -ForegroundColor White
    Write-Host "2. Make sure all required Discord IDs are correct" -ForegroundColor White
    Write-Host "3. Start the bot with: node index.js" -ForegroundColor White
    Write-Host ""
    Write-Host "Note: Optional fields can be left empty if you don't need those features." -ForegroundColor Cyan
} catch {
    Write-Host "❌ Error saving .env file: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}
